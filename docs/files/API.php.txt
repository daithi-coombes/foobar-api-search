<?php
/**
 * Makes api calls to an endpoint
 * 
 * @todo build class
 * @author David Coombes <webeire@gmail.com>
 */
namespace FoobarSearch;

/**
 * API Class.
 */
class API
{

    /** @var curl A curl resource. */
    protected $ch;
    /** @var \FoobarSearch\Config An instance of Config. */
    protected $config;

    /**
     * Constructor.
     * 
     * @param Config $config A Config instance.
     */
    function __construct(Config $config)
    {

        $this->set('config', $config);
    }

    /**
     * Factory method for chaining.
     * 
     * @param Config $config A Config instance
     * @return \FoobarSearch\API
     */
    public static function factory(Config $config)
    {

        $obj = new API($config);

        return $obj;
    }

    /**
     * Make a GET request.
     * 
     * Does not handle get params, unfortunately, for now.
     * 
     * @param array $params An array of api nodes.
     * @return stdClass Returns value from self::parseCurlResponse()
     */
    public function get( array $params )
    {

        //build url
        $url = $this->config->get('endpoint');

        foreach ($params as $param) {
            $url .= "/" . urlencode($param);
        }

        //append key
        $url .= "?_key=" . $this->config->get('api_key');

        //get headers
        $headers = array(
            'Accept: application/json'
        );

        $this->ch = curl_init();
        curl_setopt_array($this->ch, array(
            CURLOPT_URL                 => $url,
            CURLOPT_HEADER              => $headers,
            CURLOPT_RETURNTRANSFER      => 1
        ));
        $res = curl_exec($this->ch);

        return $this->parseCurlResponse($res);
    }

    /**
     * Set a class property.
     * 
     * @param string $param The property name.
     * @param mixed $value The property value.
     */
    public function set($param, $value)
    {

        $this->$param  = $value;
    }

    /**
     * Parse a curl response into header and body.
     * 
     * Always parses body as a stringified json object.
     * 
     * @param string $res The raw curl response.
     * @return object Returns an array casted as object.
     */
    private function parseCurlResponse($res)
    {

        $header_size = curl_getinfo($this->ch, CURLINFO_HEADER_SIZE);
        $header = substr($res, 0, $header_size);
        $body = substr($res, $header_size);

        return (object) array(
            'header'    => $header,
            'body'      => json_decode($body)
        );
    }
}

